name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}
      shell: bash
    - name: Get the zip file name
      id: get_zip_file_name
      run: echo ::set-output name=ZIP_FILE_NAME::jp-photo-manager-v${{ steps.get_version.outputs.VERSION }}.zip
      shell: bash
    - name: Echo
      run: echo ${{ steps.get_version.outputs.VERSION }} ${{ steps.get_zip_file_name.outputs.ZIP_FILE_NAME }}
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore JPPhotoManager/JPPhotoManager.sln
    - name: Build
      run: dotnet build --no-restore --configuration Release -p:Version="${{ steps.get_version.outputs.VERSION }}" JPPhotoManager/JPPhotoManager.sln
    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal JPPhotoManager/JPPhotoManager.Tests/JPPhotoManager.Tests.csproj
    - name: Publish
      run: dotnet publish --no-build --configuration Release -p:PublishSingleFile=false JPPhotoManager/JPPhotoManager.UI/JPPhotoManager.UI.csproj
    - name: Archive Release
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: '${{ steps.get_zip_file_name.outputs.ZIP_FILE_NAME }}'
        path: .
        directory: JPPhotoManager/JPPhotoManager.UI/bin/Release/net8.0-windows10.0.17763.0/publish
    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.RELEASE_TOKEN }}"
        prerelease: false
        files: |
          LICENSE
          JPPhotoManager/JPPhotoManager.UI/bin/Release/net8.0-windows10.0.17763.0/publish/*.zip
